@using Microsoft.AspNetCore.Identity
@using Todo.Controllers
@using Todo.Data
@using Todo.Data.Entities
@using Todo.Services
@using Todo.Views.TodoItem
@model Todo.Models.TodoLists.TodoListDetailViewmodel
@inject IUserProfileService UserProfileService
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@inject ApplicationDbContext dbContext;

@{
    ViewData["Title"] = $"List: {Model.Title}";

    var iu = await UserManager.GetUserAsync(User);
    var emailAddress = await UserManager.GetEmailAsync(iu);
    //ViewData["DisplayName"] = await UserProfileService.GetUserName(emailAddress);
}

<h2>@ViewData["Title"]</h2>

<div class="col-md-6">

    @* These would be better as an ajax call or client side filtering/sorting with javascript *@
    <form method="get" asp-controller="TodoList" asp-action="Detail">
        <input type="checkbox" id="hideDone" name="hideDone" value="true" data-val="true" @(Model.HideDone ? "checked" : "") onchange="this.form.submit()" />
        <label for="hideDone">Hide Done Items</label>

        <input type="checkbox" id="sortByRank" name="sortByRank" value="true" data-val="true" @(Model.SortByRank ? "checked" : "") onchange="this.form.submit()" />
        <label for="sortByRank">Sort By Rank</label>

        <input name="TodoListId" type="hidden" value="@Model.TodoListId">
    </form>

    <ul class="list-group">

        @foreach (var item in Model.Items)
        {
            string contextualClass;
            switch (item.Importance)
            {
                case Importance.High:
                    contextualClass = "list-group-item-danger";
                    break;
                case Importance.Low:
                    contextualClass = "list-group-item-info";
                    break;
                default:
                    contextualClass = "";
                    break;
            }

            <li class="list-group-item @contextualClass">
                
                <div class="row">

                <div class="col-md-8">
                    <a asp-action="Edit" asp-controller="TodoItem" asp-route-todoItemId="@item.TodoItemId">

                        @if (item.IsDone)
                        {
                            <s>@item.Title</s>
                        }
                        else
                        {
                            <text>@item.Title</text>
                        }
                    </a>
                </div>

                <div class="col-md-4 text-right">
                    <small>
                        @item.ResponsibleParty.Email
                        @{
                            var username = await UserProfileService.GetUserName(@item.ResponsibleParty.Email);
                            <text>@username</text>
                        }

                        <img src="https://www.gravatar.com/avatar/@Gravatar.GetHash(item.ResponsibleParty.Email)?s=30"/>

                    </small>
                </div>
                </div>

            </li>
        }
    </ul>
</div>
<div class="col-md-6">

    <h2>Create New Item</h2>

    <form id="addItemForm">
        @Html.Hidden("TodoListTitle", Model.Title, new { id = "TodoListTitle" })
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.TodoListId)

        <div class="form-group">
            <input type="text" id="Title" name="Title" placeholder="Item Name" required />
        </div>

        <div class="form-group">
            @Html.DropDownList(
                     "Importance",
                     SelectListConvenience.ImportanceSelectListItems,
                     new { required = "required" })
        </div>

        <div class="form-group">
            @Html.DropDownList(
                     "ResponsiblePartyId",
                     dbContext.UserSelectListItems(),
                     "Responsible Party",
                     new { required = "required" })
        </div>

        <div class="form-group">
            <button type="submit">Add</button>
        </div>
    </form>

</div>


